# Generated by Django 5.0.5 on 2024-05-07 08:17

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Cast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "gender",
                    models.CharField(
                        choices=[("M", "Male"), ("F", "Female")], max_length=1
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name="Movie",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("uuid", models.UUIDField(default=uuid.uuid4)),
                ("title", models.CharField(db_index=True, max_length=150, unique=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("release_date", models.DateField(null=True)),
                (
                    "genre",
                    models.CharField(
                        choices=[
                            ("ACTION", "Action"),
                            ("COMEDY", "Comedy"),
                            ("DRAMA", "Drama"),
                            ("HORROR", "Horror"),
                            ("ROMANCE", "Romance"),
                            ("SCIENCE_FICTION", "Science Fiction"),
                            ("FANTASY", "Fantasy"),
                        ],
                        db_index=True,
                        max_length=100,
                    ),
                ),
                ("length", models.PositiveIntegerField(default=1)),
                ("image_card", models.ImageField(upload_to="movie/images/")),
                ("image_cover", models.ImageField(upload_to="movie/covers/")),
                ("video", models.FileField(upload_to="movie_videos/")),
                (
                    "director",
                    models.CharField(db_index=True, max_length=100, null=True),
                ),
                ("is_paid", models.BooleanField(default=False)),
                ("views", models.IntegerField(default=0)),
                (
                    "ratings",
                    models.FloatField(
                        db_index=True,
                        default=1.0,
                        validators=[
                            django.core.validators.MaxValueValidator(10.0),
                            django.core.validators.MinValueValidator(1.0),
                        ],
                    ),
                ),
                ("slug", models.SlugField(max_length=255, unique=True)),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movies",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MovieCast",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "cast",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movies",
                        to="main.cast",
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movie_casts",
                        to="main.movie",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="movie",
            name="casts",
            field=models.ManyToManyField(through="main.MovieCast", to="main.cast"),
        ),
        migrations.CreateModel(
            name="MovieTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "movie",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movie_tags",
                        to="main.movie",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="movies",
                        to="main.tag",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="movie",
            name="tags",
            field=models.ManyToManyField(through="main.MovieTag", to="main.tag"),
        ),
        migrations.AddConstraint(
            model_name="moviecast",
            constraint=models.UniqueConstraint(
                fields=("cast_id", "movie_id"), name="unique_movie_cast"
            ),
        ),
        migrations.AddConstraint(
            model_name="movietag",
            constraint=models.UniqueConstraint(
                fields=("tag_id", "movie_id"), name="unique_movie_tag"
            ),
        ),
    ]
